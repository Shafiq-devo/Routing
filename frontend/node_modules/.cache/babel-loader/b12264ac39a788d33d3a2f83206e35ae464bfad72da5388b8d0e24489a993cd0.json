{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shafiq\\\\Routing\\\\frontend\\\\src\\\\pages\\\\Event.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: data.events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // throw new Response(\n    //   JSON.stringify({ message: 'Could not fetch' }),\n    //   { status: 500 }\n    // );\n\n    return json({\n      message: 'Could not fetch'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["E:/Shafiq/Routing/frontend/src/pages/Event.jsx"],"sourcesContent":["import { useLoaderData,json } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\nconst data =useLoaderData()\r\nif(data.isError){\r\n  return <p>{data.message}</p>\r\n}\r\nconst events = data.events\r\n\r\n  return (\r\n\r\n     \r\n       <EventsList events={data.events} />\r\n  \r\n  );\r\n}\r\n\r\nexport default EventsPage;  \r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // throw new Response(\r\n    //   JSON.stringify({ message: 'Could not fetch' }),\r\n    //   { status: 500 }\r\n    // );\r\n  \r\n  return json(\r\n    { message: 'Could not fetch' }, {status:500}\r\n  )\r\n  }\r\nelse{  return response;\r\n}\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAACC,IAAI,QAAQ,kBAAkB;AACrD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,IAAI,GAAEP,aAAa,CAAC,CAAC;EAC3B,IAAGO,IAAI,CAACC,OAAO,EAAC;IACd,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EACA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAExB,oBAGKX,OAAA,CAACF,UAAU;IAACa,MAAM,EAAER,IAAI,CAACQ;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAG1C;AAACR,EAAA,CAbQD,UAAU;EAAA,QACPL,aAAa;AAAA;AAAAgB,EAAA,GADhBX,UAAU;AAenB,eAAeA,UAAU;AACzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;;IAEF,OAAOnB,IAAI,CACT;MAAES,OAAO,EAAE;IAAkB,CAAC,EAAE;MAACW,MAAM,EAAC;IAAG,CAC7C,CAAC;EACD,CAAC,MACC;IAAG,OAAOH,QAAQ;EACtB;AACA;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}