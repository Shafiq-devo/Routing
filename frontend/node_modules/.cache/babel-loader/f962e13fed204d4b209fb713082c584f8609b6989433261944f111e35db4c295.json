{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shafiq\\\\Routing\\\\frontend\\\\src\\\\pages\\\\Event.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/eventss');\n  if (!response.ok) {\n    throw new Error({\n      isError: true\n    }, {\n      message: 'could not fetch '\n    });\n  }\n  return response;\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","Error","$RefreshReg$"],"sources":["E:/Shafiq/Routing/frontend/src/pages/Event.jsx"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\nconst data =useLoaderData()\r\nif(data.isError){\r\n  return <p>{data.message}</p>\r\n}\r\nconst events = data.events\r\n\r\n  return (\r\n    <>\r\n     \r\n      { <EventsList events={events} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;  \r\nexport async function loader() {\r\n  const response = await fetch('http://localhost:8080/eventss');\r\n\r\n  if (!response.ok) {\r\n      throw new Error({isError:true},{message:'could not fetch '});\r\n  }\r\n  return response\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,IAAI,GAAER,aAAa,CAAC,CAAC;EAC3B,IAAGQ,IAAI,CAACC,OAAO,EAAC;IACd,oBAAON,OAAA;MAAAO,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EACA,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAExB,oBACEb,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAEIP,OAAA,CAACF,UAAU;MAACe,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP;AAACR,EAAA,CAbQD,UAAU;EAAA,QACPN,aAAa;AAAA;AAAAiB,EAAA,GADhBX,UAAU;AAenB,eAAeA,UAAU;AACzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC;MAACb,OAAO,EAAC;IAAI,CAAC,EAAC;MAACE,OAAO,EAAC;IAAkB,CAAC,CAAC;EAChE;EACA,OAAOQ,QAAQ;AACjB;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}