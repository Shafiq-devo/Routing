{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shafiq\\\\Routing\\\\frontend\\\\src\\\\pages\\\\Event.jsx\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  console.log(data); // Check if data is coming\n  const events = (data === null || data === void 0 ? void 0 : data.events) || []; // Avoid errors if data is undefined\n\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://192.168.100.5:8080/events');\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events!'\n    }), {\n      status: 500\n    });\n  }\n  const data = await response.json(); // Parse the JSON\n  return data; // Return the parsed data\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","console","log","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","JSON","stringify","message","status","json","$RefreshReg$"],"sources":["E:/Shafiq/Routing/frontend/src/pages/Event.jsx"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  console.log(data); // Check if data is coming\r\n  const events = data?.events || []; // Avoid errors if data is undefined\r\n  \r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch('http://192.168.100.5:8080/events');\r\n\r\n  if (!response.ok) {\r\n    throw new Response(JSON.stringify({ message: 'Could not fetch events!' }), {\r\n      status: 500,\r\n    \r\n    });\r\n  }\r\n\r\n  const data = await response.json(); // Parse the JSON\r\n  return data; // Return the parsed data\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5BO,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;EACnB,MAAMG,MAAM,GAAG,CAAAH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,MAAM,KAAI,EAAE,CAAC,CAAC;;EAGnC,oBAAON,OAAA,CAACF,UAAU;IAACQ,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACR,EAAA,CAPQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAc,EAAA,GADnBV,UAAU;AASnB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAEhE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA0B,CAAC,CAAC,EAAE;MACzEC,MAAM,EAAE;IAEV,CAAC,CAAC;EACJ;EAEA,MAAMjB,IAAI,GAAG,MAAMU,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;EACpC,OAAOlB,IAAI,CAAC,CAAC;AACf;AAAC,IAAAQ,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}