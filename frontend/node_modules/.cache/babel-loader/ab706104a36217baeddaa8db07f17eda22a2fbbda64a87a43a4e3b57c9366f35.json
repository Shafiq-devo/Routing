{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shafiq\\\\Routing\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { json /* , useParams */ /* , useLoaderData */, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  /* const params = useParams(); */\n  /* const data = useLoaderData(); */\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const eventID = params.eventID; //eventID je parametar iz App.js\n  const response = await fetch(\"http://localhost:8080/events/\" + eventID);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","eventID","response","fetch","ok","message","status","$RefreshReg$"],"sources":["E:/Shafiq/Routing/frontend/src/pages/EventDetailPage.jsx"],"sourcesContent":["import {\r\n    json /* , useParams */ /* , useLoaderData */,\r\n    useRouteLoaderData,\r\n  } from \"react-router-dom\";\r\n  import EventItem from \"../components/EventItem\";\r\n  \r\n  const EventDetailPage = () => {\r\n    /* const params = useParams(); */\r\n    /* const data = useLoaderData(); */\r\n    const data = useRouteLoaderData(\"event-detail\");\r\n    return (\r\n      <>\r\n        <EventItem event={data.event} />\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default EventDetailPage;\r\n  \r\n  export const loader = async ({ request, params }) => {\r\n    const eventID = params.eventID; //eventID je parametar iz App.js\r\n    const response = await fetch(\"http://localhost:8080/events/\" + eventID);\r\n  \r\n    if (!response.ok) {\r\n      throw json(\r\n        { message: \"Could not fetch details for selected event.\" },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    } else {\r\n      return response;\r\n    }\r\n  };"],"mappings":";;AAAA,SACIA,IAAI,CAAC,kBAAkB,uBACvBC,kBAAkB,QACb,kBAAkB;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA;EACA,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP,CAAC;AAACP,EAAA,CATID,eAAe;EAAA,QAGNN,kBAAkB;AAAA;AAAAe,EAAA,GAH3BT,eAAe;AAWrB,eAAeA,eAAe;AAE9B,OAAO,MAAMU,MAAM,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EACnD,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO,CAAC,CAAC;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,CAAC;EAEvE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CACR;MAAEwB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}